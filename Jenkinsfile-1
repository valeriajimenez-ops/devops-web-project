pipeline {
    agent {
        node {
            label 'built-in'
        }
    }

    tools {
        maven 'Maven 3.9.x' // Ajusta si tu herramienta Maven tiene otro nombre
    }

    stages {
        stage('Packaging') {
            steps {
                echo '[INFO] Empaquetando aplicación Java con Maven...'
                bat 'mvn clean package'
            }
        }

        stage('Verificar WAR') {
            steps {
                script {
                    def warFile = bat(script: 'dir /b target\\*.war', returnStdout: true).trim()
                    if (!warFile) {
                        error '[ERROR] No se encontró ningún archivo .war en target/.'
                    } else {
                        echo "[INFO] Se encontró el archivo: ${warFile}"
                    }
                }
            }
        }

        stage('Copiar WAR') {
            steps {
                echo '[INFO] Copiando archivo WAR al directorio raíz del proyecto...'
                powershell 'Copy-Item -Path "target\\*.war" -Destination "." -Force'
            }
        }

        stage('Construir imagen Docker') {
            steps {
                echo '[INFO] Construyendo imagen Docker...'
                bat 'docker build -t valeriajimenez-ops/devops-web-project:v1 --label devops-web-project-server .'
            }
        }

        stage('Login en Docker Hub') {
            steps {
                echo '[INFO] Iniciando sesión en Docker Hub...'
                withCredentials([usernamePassword(credentialsId: 'devops-dockerhub-token', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    powershell """
                        echo \$env:DOCKER_PASS | docker login -u \$env:DOCKER_USER --password-stdin
                    """
                }
            }
        }

        stage('Publicar imagen en Docker Hub') {
            steps {
                echo '[INFO] Subiendo imagen a Docker Hub...'
                bat 'docker push valeriajimenez-ops/devops-web-project:v1'
            }
        }
    }

    post {
        always {
            echo '[INFO] Limpiando sesión de Docker...'
            bat 'docker logout || echo "Ya estaba desconectado."'
        }

        failure {
            echo '[ERROR] La ejecución del pipeline falló. Revisa los logs para más detalles.'
        }

        success {
            echo '[SUCCESS] Pipeline ejecutado correctamente. Imagen subida a Docker Hub.'
        }
    }
}
